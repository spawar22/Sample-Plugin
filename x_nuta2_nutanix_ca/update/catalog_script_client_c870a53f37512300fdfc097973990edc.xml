<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Configure Calm Settings">6ddd772a37112300fdfc097973990e01</cat_item>
        <cat_variable>IO:566ab43e37912300fdfc097973990ec1</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>Fetch Application Profiles</name>
        <order>200</order>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
    if (isLoading || newValue == '') {
        return;
    }
	
    var performAction = (g_form.getValue('type')) ? g_form.getValue('type') : getParameterValue('performAction') + '';

    if (performAction == 'update') {
        var data = getParameterValue('data');

        if (data) {
            jslog("Fetch Application Profiles | data" + data);
            data = JSON.parse(decodeURIComponent(data));
            var profile_array = (data.profile).split(',');

            g_form.clearValue('multiple_application_profile');
            for (var i in profile_array)
                g_form.setValue('multiple_application_profile', profile_array[i]);

        }
        return;
    }

    if (performAction == 'new') {
        var loadingHTML = "<div class='loading-container'><div class='loading-indicator icon-loading icon-lg'></div></div>";
        var loadingDialog = new GlideModal("loader", true);
        loadingDialog.setTitle('Fetching application profiles...'); //Set the loading dialog title here...
        loadingDialog.renderWithContent('' + loadingHTML);


        var blueprint = newValue; // g_form.getValue('project');

        var ga = new GlideAjax('Nutanix_ClientServerScriptBridge');
        ga.addParam('sysparm_name', 'fetchApplicationProfiles');
        ga.addParam('sysparm_blueprint', blueprint);
        ga.getXML(processProject, null, loadingDialog);

        function processProject(response, loadingDialog) {
            var answer = response.responseXML.documentElement.getAttribute("answer");
            var profileList = JSON.parse(answer);

            g_form.clearValue('multiple_application_profile');
            var currentProfile = getParameterValue('currentProfile') + '';

            if (Object.keys(profileList).length == 1) {
                for (var i in profileList) {
                    var profile = profileList[i];

                    if (currentProfile.indexOf(profile.sys_id + '') == -1)
                        g_form.setValue('multiple_application_profile', profile.sys_id);
                    g_form.setReadOnly('multiple_application_profile', true);
                }
            } else {
                g_form.setReadOnly('multiple_application_profile', false);
            }

            var data = getParameterValue('data');

            if (data) {
                jslog("111) Fetch Application Profiles");
                data = JSON.parse(decodeURIComponent(data));
                var profile_array = (data.profile).split(',');

                g_form.clearValue('multiple_application_profile');
                for (var i in profile_array)
                    g_form.setValue('multiple_application_profile', profile_array[i]);

            }
            new GlideModal().get("loader").destroy();
        }
    }

    var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');
    ga.addParam('sysparm_name', 'fetchBlueprintName');
    ga.addParam('sysparm_BlueprintsysId', newValue+'');
    ga.getXML(BlueprintNameParse);

    function BlueprintNameParse(response) {
        var name = response.responseXML.documentElement.getAttribute("answer");

        var blueprint_data = {
            "blueprint": g_form.getValue('blueprint'),
            "blueprint_name": name+'',
			"application_profile" : g_form.getValue('multiple_application_profile'),
			"project" : g_form.getValue('multiple_project'),
        };
		g_form.clearValue('blueprint_data');
        g_form.setValue('blueprint_data', JSON.stringify(blueprint_data));
    }

}

function getParameterValue(name) {
    name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
    var regexS = "[\\?&]" + name + "=([^&#]*)";
    var regex = new RegExp(regexS);
    var results = regex.exec(self.location);
    if (results == null) {
        return "";
    } else {
        return unescape(results[1]);
    }
}
]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>girishgyani</sys_created_by>
        <sys_created_on>2018-10-28 21:05:57</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c870a53f37512300fdfc097973990edc</sys_id>
        <sys_mod_count>97</sys_mod_count>
        <sys_name>Fetch Application Profiles</sys_name>
        <sys_overrides/>
        <sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope>
        <sys_update_name>catalog_script_client_c870a53f37512300fdfc097973990edc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-09-19 07:26:20</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>0</ui_type>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
