<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>nutanix_sync</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition>gs.getProperty('x_nuta2_nutanix_ca.calm_version')!=''&amp;&amp;(new Nutanix_ClientServerScriptBridge().checkQueue())&amp;&amp;gs.getProperty('x_nuta2_nutanix_ca.check.authentication')=='true'</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>true</form_context_menu>
        <form_link>true</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <name>Sync Now</name>
        <onclick>syncConfirmation()</onclick>
        <order>100</order>
        <script><![CDATA[//Client-side 'onclick' function
function syncConfirmation() { 
	var delConfirm = confirm("This will sync the complete inventory of Calm entities in ServiceNow. Launching Blueprints, Catalog and performing Day 2 actions will not be possible during this process. Do you really want to continue?");
	if(delConfirm) {
		importApp();
	}
	else
		return false;
} //function for pop up message
function importApp(){
	var href = parent.location.toString();
	if(href.indexOf("nav_to.do?uri=%2F") >= 0){
		parent.location = "/nav_to.do?uri=%2Fx_nuta2_nutanix_ca_nutanix_process_queue_list.do%3Fsysparm_userpref_module%3D91e0175a37152300d27b8cf6c3990e07%26sysparm_query%3Dstate!%3Dcomplete%5EEQ%26sysparm_clear_stack%3Dtrue";
		
	} else{
		parent.location = "/x_nuta2_nutanix_ca_nutanix_process_queue_list.do?sysparm_userpref_module=91e0175a37152300d27b8cf6c3990e07&sysparm_query=state!=complete^EQ&sysparm_clear_stack=true";
		
	}
	gsftSubmit(null, g_form.getFormElement(), 'nutanix_sync');
}


if(typeof window == 'undefined')
	runScriptIncludeCode();


function runScriptIncludeCode(){
	updateCalmVersion();
	if(new x_nuta2_nutanix_ca.Migration_Script().isMigrationNeeded()){
		var appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('startMigration', '', '', '', 'Migrating to v1.4', 'This process is migrating v1.3 to v1.4.');
	}
	if(gs.getProperty('x_nuta2_nutanix_ca.1_4_3') == 0){
		var appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('start1_4_3_Migration', '', '', '', 'Migrating to v1.4', 'This process is migrating v1.3 to v1.4.');	
	}
	else{
		var appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('startInventorySync', '', '', '', 'Start inventory sync', 'This process is invoking the import of all the inventories.');
	}
	
}
function updateCalmVersion(){
	gs.setProperty('x_nuta2_nutanix_ca.calm_version', '');
	var logger = new Nutanix_Calm_Logger();
    var utils = new Nutanix_Calm_Utils();

    var authResp = utils.makeCalmApiCall("post", "/projects/list", '{"kind" : "project"}');
    var statusCode = authResp.getStatusCode();
   
    if (authResp.getStatusCode() == '200' || authResp.getStatusCode() == '201') {

        var verResp = utils.makeCalmApiVersionCall("get", "/apps/version", '');
        if (verResp.getStatusCode() == '200' || verResp.getStatusCode() == '201') {
            var response = verResp.getBody();
            current.calm_version = response.split('.')[0] + '.' + response.split('.')[1];
            gs.setProperty('x_nuta2_nutanix_ca.calm_version', current.calm_version);    
            current.update();
			logger.info('Sync Now Calm Version updated->' + current.calm_version);
        } else {
            current.calm_version = '';
            current.update();

            gs.addErrorMessage('Nutanix Calm Version cannot be detected.Please check the logs and retry saving properties.');
            logger.error('Calm Version cannot be detected. Error->' + verResp.getBody());
        }
}
}
]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>mumtaz.ansari</sys_created_by>
        <sys_created_on>2018-10-24 13:00:55</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9342931e37152300d27b8cf6c3990e64</sys_id>
        <sys_mod_count>415</sys_mod_count>
        <sys_name>Sync Now</sys_name>
        <sys_overrides/>
        <sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope>
        <sys_update_name>sys_ui_action_9342931e37152300d27b8cf6c3990e64</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-02-16 07:22:55</sys_updated_on>
        <table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
